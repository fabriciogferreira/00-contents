Sumário detalhado: https://docs.djangoproject.com/en/4.2/contents/

Versões compátiveis: https://docs.djangoproject.com/pt-br/4.2/faq/install/#faq-python-version-support

Banco de dados: https://docs.djangoproject.com/pt-br/4.2/intro/install/

Instalar: https://docs.djangoproject.com/en/4.2/topics/install/

Obs:
    Não utilize esse servidor em produçao
    Apesar do django reiniciar automáticamente o servidor quando o código é atualizado, ele não faz isso para novos arquivos

Projetos x Aplicativos
    Qual é a diferença entre um projeto e um aplicativo? Um aplicativo é um aplicativo da Web que faz alguma coisa – por exemplo, um sistema de blog, um banco de dados de registros públicos ou um pequeno aplicativo de pesquisa. Um projeto é uma coleção de configurações e aplicativos para um determinado site. Um projeto pode conter vários aplicativos. Um aplicativo pode estar em vários projetos.

Possui:
    ORM - Object-Relational Mapper

Passo a passo:
    python -m venv nome-ambiente-virtual - Recomendo instalar um Ambiente Virtual
    nome-ambiente-virtual-criado\Scripts\activate - Ative o ambiente virtual para instalar o que for necessário
    deactivate - Caso precise desligar a venv (provavelmente quando terminar de mexer)
    python -m pip install Django - Instalar django
    django-admin startproject name_project - Criar projeto
    python manage.py runserver - Roda o servidor na porta [0.0.0.0:][8080]
    Ctrl + c - Parar o servidor
    python manage.py startapp name-app - Criar aplicativo


Estrutura criada
    O diretório raiz externo mysite/é um contêiner para seu projeto. Seu nome não importa para Django; você pode renomeá-lo para o que quiser.
    manage.py: Um utilitário de linha de comando que permite interagir com este projeto Django de várias maneiras. Você pode ler todos os detalhes sobre manage.py em https://docs.djangoproject.com/en/4.2/ref/django-admin/.
    O mysite/diretório interno é o pacote Python real para o seu projeto. Seu nome é o nome do pacote Python que você precisará usar para importar qualquer coisa dentro dele (por exemplo, mysite.urls).
    mysite/__init__.py: Um arquivo vazio que informa ao Python que esse diretório deve ser considerado um pacote Python. Se você é iniciante em Python, leia mais sobre pacotes nos documentos oficiais do Python https://docs.python.org/3/tutorial/modules.html#tut-packages.
    mysite/settings.py: Definições/configuração para este projeto Django. As configurações do Django lhe dirão tudo sobre como as configurações funcionam https://docs.djangoproject.com/en/4.2/topics/settings/.
    mysite/urls.py: As declarações de URL para este projeto Django; um “índice” do seu site desenvolvido com Django. Você pode ler mais sobre URLs em URL dispatcher https://docs.djangoproject.com/en/4.2/topics/http/urls/.
    mysite/asgi.py: Um ponto de entrada para servidores da Web compatíveis com ASGI para servir ao seu projeto. Consulte Como implantar com ASGI para obter mais detalhes https://docs.djangoproject.com/en/4.2/howto/deployment/asgi/.
    mysite/wsgi.py: um ponto de entrada para servidores da Web compatíveis com WSGI para servir ao seu projeto. Consulte Como implantar com WSGI para obter mais detalhes https://docs.djangoproject.com/en/4.2/howto/deployment/wsgi/.

Padrão arquitetura
    View
        Para chamar views, precisamos mapear a URL e para mapear as URLs, precisamos de uma URLconf
        As urls precisam ser criadas nos aplicativos, para isso, crie 'urls.py' 
    Model


Comandos
    python manage.py
    makemigrations - Mapeia todos os seus modelos disponíveis e cria migrações para cada tabela que ainda não exista
    migrate - Executa as migrações e cria as tabelas em seu banco de dados

Templates
    Como funciona: utiliza o conceito de herança de templates
    Faz o que: primeiro carregue o template chamado ‘base’, o qual define uma série de blocos, e preencha os blocos com os seguintes blocos
    . - servem para acessar atributos, chaves de dicionários, índices e chamar funções
    {{}} - Ficam as váriaveis nos templates


Parei em: https://docs.djangoproject.com/pt-br/4.2/intro/tutorial01/